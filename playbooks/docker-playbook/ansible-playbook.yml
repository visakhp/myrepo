---
# host is webserver as we are going to deploy the docker images and containers.
# connection is ssh i.e. use ssh keys for authentication and use remote_user as my user instead of root
- hosts: webserver
  connection: ssh
  remote_user: visakh

# set the global variables here.
  vars:
    docker_app_location: /springbootintegration_docker_compose
    ansible_app_location: /ansible_docker_app

# ansible tasks starts here
  tasks:

# create docker images and containers. Use docker-compose to create the images and containers.
  - name: create docker images and containers
    docker_service:
      build: yes
      project_src: "{{ docker_app_location }}"
      state: present
    register: docker_result

# write docker result to file in ansible host i.e. localhost
# we can check the staus, IP of the containers etc..
  - name: write docker result to file
    local_action: copy content="{{ docker_result }}" dest="{{ ansible_app_location }}/docker_result.{{ ansible_date_time.date }}.json"

# Now sleep for 60s to wait for Jboss to start.
# We can check the application status in next step.
  - name: Wait for Jboss Result
    command: sleep 60s

# check out WebApp is Up and running.
# we can check this via actuator which included in our application
  - name: Check Application Deployed Successfully
    uri:
      url: http://localhost:8180/details/health
      method: GET
      return_content: yes
      status_code: 200
      body_format: json
    register: server_result

# check out WebApp is Up and running.
# we can check this via actuator which included in our application
  - name: Check Application Deployed Successfully
    uri:
      url: http://localhost:8081/SpringBootIntegrationService/details/health
      method: GET
      return_content: yes
      status_code: 200
      body_format: json
    register: producer_result
    
# check out WebApp is Up and running.
# we can check this via actuator which included in our application
  - name: Check Application Deployed Successfully
    uri:
      url: http://localhost:8082/SpringBootConsumerService/details/health
      method: GET
      return_content: yes
      status_code: 200
      body_format: json
    register: consumer_result

# check the response of Eureka Server
  - name: Check Eureka Server Application Status
    shell: echo "Eureka Server Status is UP!!!"
    when: server_result.json.status == "UP"

# check the response of Producer
  - name: Check Producer Service Status
    shell: echo "Application Status is UP!!!"
    when: producer_result.json.status == "UP"

# check the response of Consumer
  - name: Check Consumer Service Status
    shell: echo "Application Status is UP!!!"
    when: consumer_result.json.status == "UP"


